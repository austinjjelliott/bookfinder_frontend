{"ast":null,"code":"var _jsxFileName = \"/Users/austinelliott/Springboard/Unit-50.Capstone2/capstone-project-two-e14219de7db4449bbc1f6df850e16946/bookfinder/src/Favorites.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from \"react\";\nimport UserContext from \"./UserContext\"; // Import UserContext\nimport BooklyAPI from \"./api\"; // Assuming you have an API for updating the user\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Favorites() {\n  _s();\n  const {\n    currentUser,\n    setCurrentUser\n  } = useContext(UserContext);\n  const [favorites, setFavorites] = useState((currentUser === null || currentUser === void 0 ? void 0 : currentUser.favorites) || []);\n  useEffect(() => {\n    if (currentUser) {\n      setFavorites(currentUser.favorites);\n    }\n  }, [currentUser]);\n  const handleRemoveFavorite = async bookTitle => {\n    const updatedFavorites = favorites.filter(title => title !== bookTitle);\n    try {\n      // Update the user's favorites in the backend (assuming an API for updating)\n      const updatedUser = await BooklyAPI.updateUser(currentUser.username, {\n        favorites: updatedFavorites\n      });\n      setCurrentUser(updatedUser); // Update context with new favorites list\n      setFavorites(updatedFavorites); // Update local state\n    } catch (err) {\n      console.error(\"Error removing book from favorites:\", err);\n    }\n  };\n  if (!currentUser) {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Please log in to view your favorite books.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Name:\", \" \", currentUser.username.charAt(0).toUpperCase() + currentUser.username.slice(1)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"My Favorite Books Are:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), favorites.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: favorites.map((bookTitle, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [bookTitle, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveFavorite(bookTitle),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You have no favorite books yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Favorites, \"gr/xMs58cwKG92TlV19i3g+ow1E=\");\n_c = Favorites;\nexport default Favorites;\nvar _c;\n$RefreshReg$(_c, \"Favorites\");","map":{"version":3,"names":["React","useContext","useState","useEffect","UserContext","BooklyAPI","jsxDEV","_jsxDEV","Favorites","_s","currentUser","setCurrentUser","favorites","setFavorites","handleRemoveFavorite","bookTitle","updatedFavorites","filter","title","updatedUser","updateUser","username","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","charAt","toUpperCase","slice","length","map","index","onClick","_c","$RefreshReg$"],"sources":["/Users/austinelliott/Springboard/Unit-50.Capstone2/capstone-project-two-e14219de7db4449bbc1f6df850e16946/bookfinder/src/Favorites.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport UserContext from \"./UserContext\"; // Import UserContext\nimport BooklyAPI from \"./api\"; // Assuming you have an API for updating the user\n\nfunction Favorites() {\n  const { currentUser, setCurrentUser } = useContext(UserContext);\n  const [favorites, setFavorites] = useState(currentUser?.favorites || []);\n\n  useEffect(() => {\n    if (currentUser) {\n      setFavorites(currentUser.favorites);\n    }\n  }, [currentUser]);\n\n  const handleRemoveFavorite = async (bookTitle) => {\n    const updatedFavorites = favorites.filter((title) => title !== bookTitle);\n    try {\n      // Update the user's favorites in the backend (assuming an API for updating)\n      const updatedUser = await BooklyAPI.updateUser(currentUser.username, {\n        favorites: updatedFavorites,\n      });\n      setCurrentUser(updatedUser); // Update context with new favorites list\n      setFavorites(updatedFavorites); // Update local state\n    } catch (err) {\n      console.error(\"Error removing book from favorites:\", err);\n    }\n  };\n\n  if (!currentUser) {\n    return <h3>Please log in to view your favorite books.</h3>;\n  }\n\n  return (\n    <div>\n      <h1>\n        Name:{\" \"}\n        {currentUser.username.charAt(0).toUpperCase() +\n          currentUser.username.slice(1)}\n      </h1>\n      <h3>My Favorite Books Are:</h3>\n      {favorites.length > 0 ? (\n        <ul>\n          {favorites.map((bookTitle, index) => (\n            <li key={index}>\n              {bookTitle}\n              <button onClick={() => handleRemoveFavorite(bookTitle)}>\n                Remove\n              </button>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>You have no favorite books yet.</p>\n      )}\n    </div>\n  );\n}\n\nexport default Favorites;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}