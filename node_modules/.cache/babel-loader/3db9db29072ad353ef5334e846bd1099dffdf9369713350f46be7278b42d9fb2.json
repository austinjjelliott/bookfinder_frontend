{"ast":null,"code":"var _jsxFileName = \"/Users/austinelliott/Springboard/Unit-50.Capstone2/capstone-project-two-e14219de7db4449bbc1f6df850e16946/bookfinder/src/UserContext.js\",\n  _s = $RefreshSig$();\n// import { createContext } from \"react\";\n\n// const UserContext = createContext(null);\n\n// export default UserContext;\n\nimport React, { createContext, useState, useEffect } from \"react\";\nimport BooklyAPI from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext(null);\nexport function UserContextProvider({\n  children\n}) {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n\n  // Assuming you have a function to fetch current user details\n  useEffect(() => {\n    const fetchCurrentUser = async () => {\n      try {\n        const user = await BooklyAPI.getUser(\"hhh\"); // Replace \"hhh\" with dynamic user logic if needed\n        setCurrentUser(user);\n      } catch (err) {\n        console.error(\"Error fetching user:\", err);\n      }\n    };\n    fetchCurrentUser();\n  }, []);\n\n  // This is the function that will update favorites\n  const updateFavorites = async newFavorites => {\n    try {\n      if (currentUser && currentUser.username) {\n        const updatedUser = await BooklyAPI.updateFavorites(currentUser.username, newFavorites);\n        setCurrentUser(updatedUser); // Update currentUser with the updated data\n      }\n    } catch (err) {\n      console.error(\"Error updating favorites:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      currentUser,\n      updateFavorites\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(UserContextProvider, \"Y5F2pQQk2LZA5WRO2+bvRm5iRuo=\");\n_c = UserContextProvider;\nexport default UserContext;\nvar _c;\n$RefreshReg$(_c, \"UserContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","BooklyAPI","jsxDEV","_jsxDEV","UserContext","UserContextProvider","children","_s","currentUser","setCurrentUser","fetchCurrentUser","user","getUser","err","console","error","updateFavorites","newFavorites","username","updatedUser","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/austinelliott/Springboard/Unit-50.Capstone2/capstone-project-two-e14219de7db4449bbc1f6df850e16946/bookfinder/src/UserContext.js"],"sourcesContent":["// import { createContext } from \"react\";\n\n// const UserContext = createContext(null);\n\n// export default UserContext;\n\nimport React, { createContext, useState, useEffect } from \"react\";\nimport BooklyAPI from \"./api\";\n\nconst UserContext = createContext(null);\n\nexport function UserContextProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState(null);\n\n  // Assuming you have a function to fetch current user details\n  useEffect(() => {\n    const fetchCurrentUser = async () => {\n      try {\n        const user = await BooklyAPI.getUser(\"hhh\"); // Replace \"hhh\" with dynamic user logic if needed\n        setCurrentUser(user);\n      } catch (err) {\n        console.error(\"Error fetching user:\", err);\n      }\n    };\n\n    fetchCurrentUser();\n  }, []);\n\n  // This is the function that will update favorites\n  const updateFavorites = async (newFavorites) => {\n    try {\n      if (currentUser && currentUser.username) {\n        const updatedUser = await BooklyAPI.updateFavorites(\n          currentUser.username,\n          newFavorites\n        );\n        setCurrentUser(updatedUser); // Update currentUser with the updated data\n      }\n    } catch (err) {\n      console.error(\"Error updating favorites:\", err);\n    }\n  };\n\n  return (\n    <UserContext.Provider value={{ currentUser, updateFavorites }}>\n      {children}\n    </UserContext.Provider>\n  );\n}\n\nexport default UserContext;\n"],"mappings":";;AAAA;;AAEA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,SAAS,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,WAAW,gBAAGN,aAAa,CAAC,IAAI,CAAC;AAEvC,OAAO,SAASO,mBAAmBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAChD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAEpD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMU,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMV,SAAS,CAACW,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;QAC7CH,cAAc,CAACE,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC;MAC5C;IACF,CAAC;IAEDH,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMM,eAAe,GAAG,MAAOC,YAAY,IAAK;IAC9C,IAAI;MACF,IAAIT,WAAW,IAAIA,WAAW,CAACU,QAAQ,EAAE;QACvC,MAAMC,WAAW,GAAG,MAAMlB,SAAS,CAACe,eAAe,CACjDR,WAAW,CAACU,QAAQ,EACpBD,YACF,CAAC;QACDR,cAAc,CAACU,WAAW,CAAC,CAAC,CAAC;MAC/B;IACF,CAAC,CAAC,OAAON,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEF,GAAG,CAAC;IACjD;EACF,CAAC;EAED,oBACEV,OAAA,CAACC,WAAW,CAACgB,QAAQ;IAACC,KAAK,EAAE;MAAEb,WAAW;MAAEQ;IAAgB,CAAE;IAAAV,QAAA,EAC3DA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAAClB,EAAA,CArCeF,mBAAmB;AAAAqB,EAAA,GAAnBrB,mBAAmB;AAuCnC,eAAeD,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}