{"ast":null,"code":"var _jsxFileName = \"/Users/austinelliott/Springboard/Unit-50.Capstone2/capstone-project-two-e14219de7db4449bbc1f6df850e16946/bookfinder/src/BookDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport BooklyAPI from \"./api\";\n// import BookCard from \"./BookCard\"; //Decided against re-using card so could customize it more\nimport DOMPurify from \"dompurify\"; //THIS Is to clean up the source code, get rid of the raw HTML that the API was giving\nimport UserContext from \"./UserContext\";\n// import \"./BookDetail.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BookDetail() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [book, setBook] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const {\n    currentUser,\n    setCurrentUser\n  } = useContext(UserContext);\n  useEffect(() => {\n    async function fetchBook() {\n      const singleBook = await BooklyAPI.getSingleBook(id);\n      setBook(singleBook.volumeInfo);\n    }\n    fetchBook();\n    setIsLoading(false);\n  }, [id]);\n  const handleAddToFavorites = async book => {\n    if (!currentUser) {\n      alert(\"Please log in to add books to your favorites.\");\n      return;\n    }\n    try {\n      // Get the current user's favorites from the state or backend\n      const updatedFavorites = [...currentUser.favorites, book.title];\n\n      // Update favorites using the API\n      const updatedFavoritesList = await BooklyAPI.updateFavorites(currentUser.username, updatedFavorites);\n\n      // Update the current user's state with the new favorites list\n      setCurrentUser(prevUser => ({\n        ...prevUser,\n        favorites: updatedFavoritesList\n      }));\n\n      // Store updated favorites in localStorage specific to the user\n      localStorage.setItem(`favorites-${currentUser.username}`, JSON.stringify(updatedFavoritesList));\n    } catch (err) {\n      console.error(\"Error adding book to favorites:\", err);\n    }\n  };\n\n  //\n\n  //\n\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"Loading Page...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 25\n  }, this);\n  if (!book) return /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"No Book Found. Please visit homepage and try again\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 21\n  }, this);\n  const sanitizedDescription = DOMPurify.sanitize(book.description);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"BookDetail\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"book-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: book.imageLinks.thumbnail,\n        alt: `Cover of ${book.title}`,\n        className: \"book-card__thumbnail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-card__details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), \" \", book.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Author(s):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), \" \", book.authors]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            dangerouslySetInnerHTML: {\n              __html: sanitizedDescription\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Published: \", book.publishedDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Page Count: \", book.pageCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), currentUser && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddToFavorites,\n      children: \"Add to Favorites\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(BookDetail, \"bXFs7opdIojP1ldO3iD8JJATzi8=\", false, function () {\n  return [useParams];\n});\n_c = BookDetail;\nexport default BookDetail;\nvar _c;\n$RefreshReg$(_c, \"BookDetail\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useParams","BooklyAPI","DOMPurify","UserContext","jsxDEV","_jsxDEV","BookDetail","_s","id","book","setBook","isLoading","setIsLoading","currentUser","setCurrentUser","fetchBook","singleBook","getSingleBook","volumeInfo","handleAddToFavorites","alert","updatedFavorites","favorites","title","updatedFavoritesList","updateFavorites","username","prevUser","localStorage","setItem","JSON","stringify","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","sanitizedDescription","sanitize","description","className","src","imageLinks","thumbnail","alt","authors","dangerouslySetInnerHTML","__html","publishedDate","pageCount","onClick","_c","$RefreshReg$"],"sources":["/Users/austinelliott/Springboard/Unit-50.Capstone2/capstone-project-two-e14219de7db4449bbc1f6df850e16946/bookfinder/src/BookDetail.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport BooklyAPI from \"./api\";\n// import BookCard from \"./BookCard\"; //Decided against re-using card so could customize it more\nimport DOMPurify from \"dompurify\"; //THIS Is to clean up the source code, get rid of the raw HTML that the API was giving\nimport UserContext from \"./UserContext\";\n// import \"./BookDetail.css\";\n\nfunction BookDetail() {\n  const { id } = useParams();\n  const [book, setBook] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const { currentUser, setCurrentUser } = useContext(UserContext);\n\n  useEffect(() => {\n    async function fetchBook() {\n      const singleBook = await BooklyAPI.getSingleBook(id);\n      setBook(singleBook.volumeInfo);\n    }\n    fetchBook();\n    setIsLoading(false);\n  }, [id]);\n\n  const handleAddToFavorites = async (book) => {\n    if (!currentUser) {\n      alert(\"Please log in to add books to your favorites.\");\n      return;\n    }\n\n    try {\n      // Get the current user's favorites from the state or backend\n      const updatedFavorites = [...currentUser.favorites, book.title];\n\n      // Update favorites using the API\n      const updatedFavoritesList = await BooklyAPI.updateFavorites(\n        currentUser.username,\n        updatedFavorites\n      );\n\n      // Update the current user's state with the new favorites list\n      setCurrentUser((prevUser) => ({\n        ...prevUser,\n        favorites: updatedFavoritesList,\n      }));\n\n      // Store updated favorites in localStorage specific to the user\n      localStorage.setItem(\n        `favorites-${currentUser.username}`,\n        JSON.stringify(updatedFavoritesList)\n      );\n    } catch (err) {\n      console.error(\"Error adding book to favorites:\", err);\n    }\n  };\n\n  //\n\n  //\n\n  if (isLoading) return <h3>Loading Page...</h3>;\n  if (!book) return <h3>No Book Found. Please visit homepage and try again</h3>;\n  const sanitizedDescription = DOMPurify.sanitize(book.description);\n\n  return (\n    <div className=\"BookDetail\">\n      <div className=\"book-card\">\n        <img\n          src={book.imageLinks.thumbnail}\n          alt={`Cover of ${book.title}`}\n          className=\"book-card__thumbnail\"\n        />\n        <div className=\"book-card__details\">\n          <p>\n            <strong>Title:</strong> {book.title}\n          </p>\n          <p>\n            <strong>Author(s):</strong> {book.authors}\n          </p>\n\n          <p>\n            <strong>Description:</strong>\n            <span dangerouslySetInnerHTML={{ __html: sanitizedDescription }} />\n            {/* ALL of this extra stuff was to clean up the raw HTML that the API was giving us. It looks cleaner on BookCard cuz its cleaned up by <Link> */}\n          </p>\n\n          <p>\n            <small>Published: {book.publishedDate}</small>\n          </p>\n          <p>\n            <small>Page Count: {book.pageCount}</small>\n          </p>\n        </div>\n      </div>\n      {/* Add the 'Add to Favorites' button only if the user is logged in */}\n      {currentUser && (\n        <button onClick={handleAddToFavorites}>Add to Favorites</button>\n      )}\n    </div>\n  );\n}\n\nexport default BookDetail;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}